spring.profiles.active=dev
############## 以下为各个环境通用的配置  ############

# 项目名
spring.application.name=msf-gateway
server.servlet.context-path=/msf

# 热部署生效
spring.devtools.restart.enabled=true
# 设置重启的目录,添加那个目录的文件需要restart
spring.devtools.restart.additional-paths=src/main/java

# Dubbo Config properties
# Base packages to scan Dubbo Components (e.g @Service , @Reference)
dubbo.scan.basePackages  = com.msf.gateway

## ApplicationConfig Bean
dubbo.application.id = msf-gateway
dubbo.application.name = msf-gateway

## ProtocolConfig Bean
dubbo.protocol.id = dubbo
dubbo.protocol.name = dubbo

## 启动时检查是否存在服务提供者（也可以设置单个接口检查-优先级高，registry检查）
dubbo.consumer.check=false
## dubbo消费者调用日志
#dubbo.consumer.filter=extendConsumeLogFilter
## dubbo入参日志|异常抛出**
#dubbo.provider.filter=extendServiceLogFilter,extendExceptionFilter,-exception
## 提供者重试次数（消费方未设定则采用提供方，默认重试两次）
dubbo.provider.retries=-1
## 消费者重试次数（消费方未设定则采用提供方，默认重试两次）
dubbo.consumer.retries=-1

# 单注册中心
#dubbo.registry.id = msf-registry
# 多注册中心配置
## 非默认注册中心
dubbo.registries.other1.Default=false
## 不需要注册
dubbo.registries.other1.register=true

#线程池配置
core.pool.size=100
max.pool.size=200
queue.capacity=400
keep.alive.seconds=60
thread.name.prefix=taskExecutor-
await.termination.seconds=60


# 是否开启apollo
apollo.bootstrap.enabled = false
